Changes were made to uvmcopy() in vm.c so that when a child process is created no new pages are allocated for it, rather the child and parent shares 
the same pages and the reference count for the shared pages are kept track.

The cow flag is set, and the write flag is cleared for the virtual address of shared pages of both parent and child.

When the parent or the child wants to write to the  shared pages, a pagefault trap is captured which calls the cow function in vm.c, which 
creates a new page, copies the data from shared page to new page and then maps the faulting virtual address to the new page. After all these 
are done the cow function calls kfree for the old page which was shared. 

The kfree is modified such that a page is freed and added to the freelist only if all the references to that page is removed.

The references to the pages are tracked through an array in the kalloc.c. The size of the array is the number of free pages initially when the os is loaded.
